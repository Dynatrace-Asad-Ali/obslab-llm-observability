apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: weaviate-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: "standard"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weaviate-semantic-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weaviate-semantic-cache
  template:
    metadata:
      labels:
        app: weaviate-semantic-cache
      annotations:
        metrics.dynatrace.com/scrape: "true"
        metrics.dynatrace.com/port: "2112"
        metrics.dynatrace.com/path: "/metrics"
    spec:
      volumes:
      - name: weaviate-volume
        persistentVolumeClaim:
          claimName: weaviate-pvc
      containers:
      - name: weaviate
        image: semitechnologies/weaviate:latest
        ports:
        - containerPort: 8080
        - containerPort: 2112
        volumeMounts:
        - name: weaviate-volume
          mountPath: /var/lib/weaviate
        env:
        - name: PROMETHEUS_MONITORING_ENABLED
          value: "true"
        - name: AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED
          value: "true"
        - name: DEFAULT_VECTORIZER_MODULE
          value: "none"
        - name: AUTOSCHEMA_ENABLED
          value: "false"
        - name: ENABLE_MODULES
          value: "text2vec-openai"
        - name: PERSISTENCE_DATA_PATH
          value: "/var/lib/weaviate"
        resources:
          limits:
            cpu: "0.1"     # Maximum CPU usage
            memory: "512Mi"  # Maximum memory usage
---
apiVersion: v1
kind: Service
metadata:
  name: weaviate-service
spec:
  selector:
    app: weaviate-semantic-cache
  ports:
  - protocol: TCP
    port: 80
    name: web
    targetPort: 8080  # container port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: travel-advisor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: travel-advisor
  template:
    metadata:
      labels:
        app: travel-advisor
    spec:
      containers:
      - name: travel-advisor
        #image: ghcr.io/dynatrace-perfclinics/traveladvisor:main
        image: gardnera/traveladvisor:main
        #image: wolfgangb33r/travelguide:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: openai-details
              key: API_KEY
        - name: COMPLETION_LENGTH
          value: "50"
        - name: WEAVIATE_ENDPOINT
          value: "http://weaviate-service:80"
        - name: OTEL_COLLECTOR_ENDPOINT
          value: "dynatrace-collector-opentelemetry-collector.default.svc.cluster.local:4317"
        - name: TRACELOOP_BASE_URL
          value: "dynatrace-collector-opentelemetry-collector.default.svc.cluster.local:4318"
        - name: TRACELOOP_TELEMETRY
          value: "False"
        - name: OTEL_COLLECTOR_ENDPOINT_INSECURE
          value: "True"
        resources:
          limits:
            cpu: "0.1"     # Maximum CPU usage
            memory: "512Mi"  # Maximum memory usage
---
apiVersion: v1
kind: Service
metadata:
  name: travel-advisor-service
spec:
  selector:
    app: travel-advisor
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080  # Replace with your container port
    nodePort: 30100
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-config
  namespace: default
data:
  script.js: |
    import http from 'k6/http';
    import { sleep } from 'k6';

    export const options = {
      vus: 10,
      duration: '1m',
    };
    
    export default function () {
      http.get('http://travel-advisor-service.travel-advisor.svc.cluster.local/api/v1/completion?prompt=sydney');
      sleep(1);
    }
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: run-k6
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: k6
            image: hrexed/xk6-dynatrace-output:0.11
            args: ["run", "/script.js", "-o", "output-dynatrace"]
            volumeMounts:
            - name: config-volume
              mountPath: /script.js
              subPath: script.js
            env:
              - name: K6_DYNATRACE_URL
                valueFrom:
                  secretKeyRef:
                    name: dt-details
                    key: DT_ENDPOINT
              - name: K6_DYNATRACE_APITOKEN
                valueFrom:
                  secretKeyRef:
                    name: dt-details
                    key: DT_API_TOKEN
          volumes:
            - name: config-volume
              configMap:
                name: k6-config
          restartPolicy: OnFailure
